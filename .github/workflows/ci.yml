name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install poetry
        run: pip install poetry

      - name: Determine dependencies
        run: poetry lock

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: poetry

      - name: Install Dependencies using Poetry
        run: poetry install

      - name: Check formatting
        run: poetry run black --check .

  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3
      
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install poetry
        run: pip install poetry

      - name: Determine dependencies
        run: poetry lock

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: poetry

      - name: Install Dependencies using Poetry
        run: poetry install

      - name: Check code
        run: poetry run flake8

  testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install poetry
        run: pip install poetry

      - name: Determine dependencies
        run: poetry lock

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install

      - name: start minikube
        id: minikube
        uses: medyagh/setup-minikube@v0.0.14

      - name: Setup minio
        run: |
          kubectl create -f .github/workflows/assets/minio.yaml
          kubectl expose deployment/my-minio-fs --type="NodePort" --port 9000

      - name: Test minio
        run: |
          export AWS_ACCESS_KEY_ID=minio
          export AWS_SECRET_ACCESS_KEY=minio123
          export AWS_EC2_METADATA_DISABLED=true
          export MINIO_PORT=$(kubectl get services/my-minio-fs -o go-template='{{(index .spec.ports 0).nodePort}}')
          aws --endpoint-url http://minikube:$MINIO_PORT/ s3 mb s3://test

      - name: Run pytest
        run: poetry run coverage run -m pytest tests/tests.py -sv

      - name: Run Coverage
        run: poetry run coverage report -m
